@startuml
Class Boat {}
Class Plateau {
 grillePlayer : int [][]
 grilleOrdinateur : int [][]
}
Abstract "AbstractEpoqueFactory" {
 createBoat( vie : int, taille : int, armure : int, boat : Boat)
}
Class Modele {}
Class EpoqueXX{}
Class EpoqueXVI{}
Class Observer{}
Class Controller{}
Class VueOption {}
Class VueGrille{}
Class VueBoat{}
Class VueJoueur{}
Class VueEnnemi{}
Class ControllerPoserBoat{}
Class ControllerTirer
Abstract Joueur{}
Class Human{}
Class IA{
 setStrategie(strat : Strategie) : void
}
Abstract Strategie{}
Class "StrategieCroix" as Cross{}
Class "StrategieRandom" as Rand{}
Abstract DAO{}
Class TXTFactory{}
Class PlateauTXTDAO{
 uniqueInstance : PlateautTXTDAO
}
Interface PlateauDAO{
 save(plateau : Plateau, file : String) : void
 load(file : String) : Plateau
}

Boat "1..*" -- "1" Plateau
Boat "1..*" -- "1" AbstractEpoqueFactory
Modele "1" -- "1..2" Plateau
Modele "1" -- "1..*" Controller
Modele "1" -- "1..2" Joueur
AbstractEpoqueFactory ^-- EpoqueXX
AbstractEpoqueFactory ^-- EpoqueXVI
Observer ^-- VueOption
Observer ^--VueGrille
Controller --> Observer
Controller ^-- ControllerPoserBoat
Controller ^-- ControllerTirer
VueGrille ^-- VueBoat
VueGrille ^-- VueJoueur
VueGrille ^-- VueEnnemi
Joueur ^-- Human
Joueur <-- IA
IA  -- "1" Strategie
Strategie ^-- Cross
Strategie ^-- Rand
DAO <-- TXTFactory
TXTFactory ..> PlateauTXTDAO : create
PlateauTXTDAO ..> PlateauDAO
@enduml
